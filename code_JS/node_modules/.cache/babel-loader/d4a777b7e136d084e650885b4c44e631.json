{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SystemOutp\\\\_APP_REACT\\\\t2project\\\\src\\\\pages\\\\Servicios.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './css/Propiedad.css';\nimport { Bar, Pie } from 'react-chartjs-2';\nexport default class Servicios extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prop: [],\n      mat: [],\n      materiales: [],\n      porcentajes: [],\n      colores: [\"#28b012\", \"#48f985\", \"#bfcf12\", \"#7c2c7b\"],\n      data: {\n        datasets: [],\n        labels: []\n      },\n      opciones: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    axios.get(\"http://localhost:3001/propiedades/\" + 0).then(res => {\n      const prop = res.data;\n      const mat = prop.mat;\n      this.setState({\n        mat: mat\n      });\n      const materiales = [],\n            porcentajes = [];\n      this.state.mat.map(item => {\n        materiales.push(item.material);\n        porcentajes.push(item.porcentaje);\n      });\n      this.setState({\n        materiales: materiales,\n        porcentajes: porcentajes\n      });\n    });\n    await this.configurarGrafica();\n  }\n\n  configurarGrafica() {\n    const data = {\n      datasets: [{\n        data: this.state.porcentajes,\n        backgroundColor: this.state.colores\n      }],\n      labels: this.state.materiales\n    };\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    console.log(this.state.mat);\n    console.log(this.state.materiales);\n    console.log(this.state.porcentajes);\n    console.log(this.state.colores);\n    const data = {\n      datasets: [{\n        label: 'Numeros',\n        backgroundColor: 'rgba(0,255,0,1)',\n        borderColor: 'black',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,255,0,0.2)',\n        hoverBorderColor: '#FF0000',\n        data: this.state.porcentajes\n      }],\n      labels: this.state.materiales\n    };\n    const opciones = {\n      maintainAspectRatio: false,\n      responsive: true\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Pie graf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          options: opciones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/SystemOutp/_APP_REACT/t2project/src/pages/Servicios.js"],"names":["React","Component","axios","Bar","Pie","Servicios","constructor","props","state","prop","mat","materiales","porcentajes","colores","data","datasets","labels","opciones","responsive","maintainAspectRatio","componentDidMount","get","then","res","setState","map","item","push","material","porcentaje","configurarGrafica","backgroundColor","render","console","log","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport './css/Propiedad.css'\nimport { Bar, Pie } from 'react-chartjs-2';\n\nexport default class Servicios extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prop: [],\n            mat: [],\n            materiales: [],\n            porcentajes: [],\n            colores: [\"#28b012\", \"#48f985\", \"#bfcf12\", \"#7c2c7b\"],\n            data: { datasets: [], labels: [] },\n            opciones: { responsive: true, maintainAspectRatio: false}\n        }\n    }\n\n async componentDidMount() {\n        axios.get(\"http://localhost:3001/propiedades/\" + 0)\n            .then(res => {\n                const prop = res.data;\n                const mat = prop.mat;\n                this.setState({ mat: mat })\n                const materiales = [], porcentajes = [];\n\n                this.state.mat.map(item => {\n                    materiales.push(item.material);\n                    porcentajes.push(item.porcentaje);\n                })\n\n                this.setState(\n                    {\n                        materiales: materiales,\n                        porcentajes: porcentajes\n                    }\n                )\n            })\n\n        await this.configurarGrafica();\n    }\n\n\n    configurarGrafica() {\n        const data = {\n            datasets: [{\n                data: this.state.porcentajes,\n                backgroundColor: this.state.colores\n            }],\n            labels: this.state.materiales,\n        };\n        this.setState({data:data})\n    }\n\n\n    render() {\n        console.log(this.state.mat)\n        console.log(this.state.materiales)\n        console.log(this.state.porcentajes)\n        console.log(this.state.colores)\n\n\n        const data = {\n            datasets: [{\n                label: 'Numeros',\n                backgroundColor: 'rgba(0,255,0,1)',\n                borderColor: 'black',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(0,255,0,0.2)',\n                hoverBorderColor: '#FF0000',\n                data: this.state.porcentajes\n\n            }],\n            labels: this.state.materiales\n        };\n\n        const opciones = {\n            maintainAspectRatio: false,\n            responsive: true\n        }\n\n\n\n        return (\n            <>             \n            <div style={{ width: \"100%\", height: \"500px\" }}>\n                <h1> Pie graf</h1>\n                    <Pie data={data} options={opciones}/>\n                </div>\n                </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}