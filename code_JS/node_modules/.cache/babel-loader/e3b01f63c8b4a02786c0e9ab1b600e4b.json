{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SystemOutp\\\\_APP_REACT\\\\t2project\\\\src\\\\pages\\\\Servicios.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Cards from '../components/Cards';\nimport { Paper, Grid } from '@material-ui/core';\nimport Pagination from '../components/Pagination';\nexport default class Ventas extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prop: [],\n      value: 1,\n      currentOffset: 0,\n      pageCounter: 1\n    };\n\n    this.fetchData = (offset = 0) => {\n      const url = 'http://localhost:3001/propiedades';\n      let params = {\n        offset: offset,\n        limit: 20\n      };\n      axios.get(url, {\n        params\n      }).then(res => {\n        const {\n          results\n        } = res.data;\n        this.setState({\n          prop: results\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.increment = () => {\n      const {\n        currentOffset,\n        pageCounter\n      } = this.state;\n      this.setState({\n        currentOffset: currentOffset + 20,\n        pageCounter: pageCounter + 1\n      });\n    };\n\n    this.decrement = () => {\n      const {\n        currentOffset,\n        pageCounter\n      } = this.state;\n      this.setState({\n        currentOffset: currentOffset - 20,\n        pageCounter: pageCounter - 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      currentOffset\n    } = this.state;\n\n    if (currentOffset !== prevState.currentOffset) {\n      if (currentOffset < 0) {\n        this.setState({\n          currentOffset: 0,\n          pageCounter: 1\n        });\n        this.fetchData(prevState.currentOffset);\n      }\n\n      this.fetchData(currentOffset);\n    }\n  }\n\n  render() {\n    const {\n      prop,\n      value,\n      pageCounter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination, {\n          increment: this.increment,\n          decrement: this.decrement,\n          page: pageCounter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: \"paper_prim\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Propiedades en Venta \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 24,\n          children: this.state.prop.map(item => {\n            if (item.category == value) {\n              return /*#__PURE__*/_jsxDEV(Cards, {\n                idCard: item.id,\n                imgBannerCard: item.imgBanner,\n                tittleCard: item.tittle,\n                smallContentCard: item.smallContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/SystemOutp/_APP_REACT/t2project/src/pages/Servicios.js"],"names":["React","Component","Fragment","axios","Cards","Paper","Grid","Pagination","Ventas","state","prop","value","currentOffset","pageCounter","fetchData","offset","url","params","limit","get","then","res","results","data","setState","catch","error","console","log","increment","decrement","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","item","category","id","imgBanner","tittle","smallContent"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport axios from 'axios'\nimport Cards from '../components/Cards'\nimport { Paper, Grid } from '@material-ui/core';\nimport Pagination from '../components/Pagination';\n\nexport default class Ventas extends Component {\n    state = {\n        prop: [],\n        value: 1,\n        currentOffset: 0,\n        pageCounter: 1,\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { currentOffset } = this.state;\n        if (currentOffset !== prevState.currentOffset) {\n            if (currentOffset < 0) {\n                this.setState({\n                    currentOffset: 0,\n                    pageCounter: 1,\n                });\n                this.fetchData(prevState.currentOffset);\n            }\n            this.fetchData(currentOffset);\n        }\n    }\n\n\n    fetchData = (offset = 0) => {\n        const url = 'http://localhost:3001/propiedades';\n        let params = {\n            offset: offset,\n            limit: 20\n        }\n        axios.get(url, { params })\n            .then(res => {\n                const { results } = res.data;\n\n                this.setState({\n                    prop: results,\n                })\n\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n\n\n    increment = () => {\n        const { currentOffset, pageCounter } = this.state;\n        this.setState({\n            currentOffset: currentOffset + 20,\n            pageCounter: pageCounter + 1,\n        });\n    }\n\n    decrement = () => {\n        const { currentOffset, pageCounter } = this.state;\n        this.setState({\n            currentOffset: currentOffset - 20,\n            pageCounter: pageCounter - 1,\n        });\n    }\n\n    render() {\n        const { prop, value, pageCounter } = this.state;\n\n        return (\n            <div>\n                <Fragment>\n\n                    <Pagination\n                        increment={this.increment}\n                        decrement={this.decrement}\n                        page={pageCounter}\n                    />\n\n                    <Grid item xs={12}>\n                        <Paper className='paper_prim'>\n                            <h1>Propiedades en Venta </h1>\n                        </Paper>\n                    </Grid>\n                    <Grid container spacing={24} >\n                        {this.state.prop.map(item => {\n                            if (item.category == value) {\n                                return (\n                                    <Cards\n                                        idCard={item.id}\n                                        imgBannerCard={item.imgBanner}\n                                        tittleCard={item.tittle}\n                                        smallContentCard={item.smallContent}\n                                    />\n                                )\n                            }\n                        })}\n\n                    </Grid>\n                </Fragment>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}